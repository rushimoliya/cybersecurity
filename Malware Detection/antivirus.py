# antivirus.py
import time
import os
import subprocess
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from config import WATCH_FOLDER, CLAMSCAN_PATH, LOG_FILE, ACTION_ON_VIRUS, QUARANTINE_FOLDER

class ScanHandler(FileSystemEventHandler):
    """Watches for new files and scans them with ClamAV."""
    
    def on_created(self, event):
        if not event.is_directory:
            file_path = os.path.normpath(event.src_path)
            print(f"üîç New file detected: {file_path}. Scanning...")
            result = subprocess.run([CLAMSCAN_PATH, file_path], capture_output=True, text=True)
            
            # Log the scan result
            with open(LOG_FILE, "a") as log:
                log.write(result.stdout + "\n")

            if "FOUND" in result.stdout:
                print(f"‚ö†Ô∏è VIRUS DETECTED in {file_path}!")
                
                if ACTION_ON_VIRUS == "delete":
                    os.remove(file_path)
                    print(f"üóëÔ∏è File deleted: {file_path}")
                
                elif ACTION_ON_VIRUS == "move":
                    if not os.path.exists(QUARANTINE_FOLDER):
                        os.makedirs(QUARANTINE_FOLDER)
                    new_path = os.path.join(QUARANTINE_FOLDER, os.path.basename(file_path))
                    os.rename(file_path, new_path)
                    print(f"üö® File moved to quarantine: {new_path}")
                
                elif ACTION_ON_VIRUS == "log_only":
                    print("üìå Virus found, but no action taken.")
            else:
                print(f"‚úÖ {file_path} is clean.")

# Start monitoring the folder
observer = Observer()
observer.schedule(ScanHandler(), path=WATCH_FOLDER, recursive=True)
observer.start()

print(f"üõ°Ô∏è Real-time antivirus is running... Monitoring {WATCH_FOLDER}")

try:
    while True:
        time.sleep(10)
except KeyboardInterrupt:
    observer.stop()
observer.join()
